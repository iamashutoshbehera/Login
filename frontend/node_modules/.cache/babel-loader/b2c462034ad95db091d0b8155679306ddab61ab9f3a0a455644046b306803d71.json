{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getThemeColors } from '../styles/theme';\nexport const useTheme = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    // Use React state instead of localStorage for Claude.ai compatibility\n    return false; // Default to light mode\n  });\n  const toggleDarkMode = () => setIsDarkMode(!isDarkMode);\n  return {\n    isDarkMode,\n    toggleDarkMode,\n    theme: getThemeColors(isDarkMode)\n  };\n};\n_s(useTheme, \"3THVBHz+lrXwgQCKGXe3yYUL6Oo=\");","map":{"version":3,"names":["useState","useEffect","getThemeColors","useTheme","_s","isDarkMode","setIsDarkMode","toggleDarkMode","theme"],"sources":["C:/Users/Iamas/login-application/frontend/src/hooks/useTheme.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getThemeColors } from '../styles/theme';\r\n\r\nexport const useTheme = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    // Use React state instead of localStorage for Claude.ai compatibility\r\n    return false; // Default to light mode\r\n  });\r\n\r\n  const toggleDarkMode = () => setIsDarkMode(!isDarkMode);\r\n\r\n  return { \r\n    isDarkMode, \r\n    toggleDarkMode, \r\n    theme: getThemeColors(isDarkMode) \r\n  };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,iBAAiB;AAEhD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,MAAM;IACjD;IACA,OAAO,KAAK,CAAC,CAAC;EAChB,CAAC,CAAC;EAEF,MAAMO,cAAc,GAAGA,CAAA,KAAMD,aAAa,CAAC,CAACD,UAAU,CAAC;EAEvD,OAAO;IACLA,UAAU;IACVE,cAAc;IACdC,KAAK,EAAEN,cAAc,CAACG,UAAU;EAClC,CAAC;AACH,CAAC;AAACD,EAAA,CAbWD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}