{"ast":null,"code":"export const authAPI = {\n  async login(email, password) {\n    try {\n      const response = await fetch('http://localhost:8080/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      return await response.json();\n    } catch (error) {\n      console.error('Login API error:', error);\n      throw error;\n    }\n  },\n  async register(userData) {\n    try {\n      const response = await fetch('http://localhost:8080/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      return await response.json();\n    } catch (error) {\n      console.error('Register API error:', error);\n      throw error;\n    }\n  },\n  async resetPassword(email, newPassword, confirmPassword) {\n    try {\n      const response = await fetch('http://localhost:8080/api/auth/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          newPassword,\n          confirmPassword\n        })\n      });\n      return await response.json();\n    } catch (error) {\n      console.error('Reset password API error:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["authAPI","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","error","console","register","userData","resetPassword","newPassword","confirmPassword"],"sources":["C:/Users/Iamas/login-application/frontend/src/services/authAPI.js"],"sourcesContent":["export const authAPI = {\r\n  async login(email, password) {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Login API error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async register(userData) {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/auth/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(userData)\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Register API error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async resetPassword(email, newPassword, confirmPassword) {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/auth/reset-password', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, newPassword, confirmPassword })\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Reset password API error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG;EACrB,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MACF,OAAO,MAAMC,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,QAAQA,CAACC,QAAQ,EAAE;IACvB,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACK,QAAQ;MAC/B,CAAC,CAAC;MACF,OAAO,MAAMX,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMI,aAAaA,CAACd,KAAK,EAAEe,WAAW,EAAEC,eAAe,EAAE;IACvD,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;QAC5EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK;UAAEe,WAAW;UAAEC;QAAgB,CAAC;MAC9D,CAAC,CAAC;MACF,OAAO,MAAMd,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}