{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const useForm = initialState => {\n  _s();\n  const [formData, setFormData] = useState(initialState);\n  const [validationErrors, setValidationErrors] = useState({});\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear validation error for this field when user starts typing\n    if (validationErrors[name]) {\n      setValidationErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const resetForm = (newData = initialState) => {\n    setFormData(newData);\n    setValidationErrors({});\n  };\n  return {\n    formData,\n    validationErrors,\n    setValidationErrors,\n    handleInputChange,\n    resetForm\n  };\n};\n_s(useForm, \"VEX+08oC+KBCkZcvayLV05TeOC8=\");","map":{"version":3,"names":["useState","useForm","initialState","_s","formData","setFormData","validationErrors","setValidationErrors","handleInputChange","e","name","value","target","prev","resetForm","newData"],"sources":["C:/Users/Iamas/login-application/frontend/src/hooks/useForm.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport const useForm = (initialState) => {\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    // Clear validation error for this field when user starts typing\r\n    if (validationErrors[name]) {\r\n      setValidationErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const resetForm = (newData = initialState) => {\r\n    setFormData(newData);\r\n    setValidationErrors({});\r\n  };\r\n\r\n  return {\r\n    formData,\r\n    validationErrors,\r\n    setValidationErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,OAAO,GAAIC,YAAY,IAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAACE,YAAY,CAAC;EACtD,MAAM,CAACI,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5D,MAAMQ,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,WAAW,CAACQ,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;;IAEH;IACA,IAAIL,gBAAgB,CAACI,IAAI,CAAC,EAAE;MAC1BH,mBAAmB,CAACM,IAAI,KAAK;QAC3B,GAAGA,IAAI;QACP,CAACH,IAAI,GAAG;MACV,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMI,SAAS,GAAGA,CAACC,OAAO,GAAGb,YAAY,KAAK;IAC5CG,WAAW,CAACU,OAAO,CAAC;IACpBR,mBAAmB,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,OAAO;IACLH,QAAQ;IACRE,gBAAgB;IAChBC,mBAAmB;IACnBC,iBAAiB;IACjBM;EACF,CAAC;AACH,CAAC;AAACX,EAAA,CAhCWF,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}