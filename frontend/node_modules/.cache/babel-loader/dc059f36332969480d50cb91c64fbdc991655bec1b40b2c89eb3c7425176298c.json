{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iamas\\\\login-application\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useTheme } from './hooks/useTheme';\nimport { useForm } from './hooks/useForm';\nimport { authAPI } from './services/authAPI';\nimport { VIEW_TYPES, MESSAGE_TYPES, FORM_VALIDATION } from './utils/constants';\n\n// Components\nimport { ThemeToggle } from './components/common/ThemeToggle';\nimport { SocialLogin } from './components/common/SocialLogin';\nimport { LoginForm } from './components/forms/LoginForm';\nimport { SignupForm } from './components/forms/SignupForm';\nimport { ResetPasswordForm } from './components/forms/ResetPasswordForm';\nimport { Dashboard } from './components/layout/Dashboard';\nimport { UserIcon, KeyIcon } from './components/icons/Icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    isDarkMode,\n    toggleDarkMode,\n    theme\n  } = useTheme();\n  const [currentView, setCurrentView] = useState(VIEW_TYPES.LOGIN);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [user, setUser] = useState(null);\n  const [isHovered, setIsHovered] = useState(false);\n  const loginForm = useForm({\n    email: '',\n    password: ''\n  });\n  const signupForm = useForm({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    firstName: '',\n    lastName: ''\n  });\n  const resetForm = useForm({\n    email: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const clearMessages = () => {\n    setMessage('');\n    setMessageType('');\n  };\n  const validateForm = (formData, formType) => {\n    const errors = {};\n\n    // Password matching validation\n    if ((formType === VIEW_TYPES.SIGNUP || formType === VIEW_TYPES.RESET) && formData.password !== formData.confirmPassword) {\n      errors.confirmPassword = 'Passwords do not match';\n    }\n\n    // Password length validation\n    const passwordField = formType === VIEW_TYPES.RESET ? 'newPassword' : 'password';\n    if (formData[passwordField] && formData[passwordField].length < FORM_VALIDATION.MIN_PASSWORD_LENGTH) {\n      errors[passwordField] = `Password must be at least ${FORM_VALIDATION.MIN_PASSWORD_LENGTH} characters long`;\n    }\n\n    // Required fields validation\n    const requiredFields = FORM_VALIDATION.REQUIRED_FIELDS[formType.toUpperCase()];\n    requiredFields === null || requiredFields === void 0 ? void 0 : requiredFields.forEach(field => {\n      var _formData$field;\n      if (!((_formData$field = formData[field]) !== null && _formData$field !== void 0 && _formData$field.trim())) {\n        errors[field] = 'This field is required';\n      }\n    });\n    return errors;\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    clearMessages();\n    const errors = validateForm(loginForm.formData, VIEW_TYPES.LOGIN);\n    if (Object.keys(errors).length > 0) {\n      loginForm.setValidationErrors(errors);\n      setMessage('Please fix the errors below.');\n      setMessageType(MESSAGE_TYPES.ERROR);\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const data = await authAPI.login(loginForm.formData.email, loginForm.formData.password);\n      if (data.success) {\n        setMessage(`Welcome back, ${data.user.fullName}!`);\n        setMessageType(MESSAGE_TYPES.SUCCESS);\n        setUser(data.user);\n        loginForm.resetForm();\n      } else {\n        setMessage(data.message || 'Login failed. Please check your credentials.');\n        setMessageType(MESSAGE_TYPES.ERROR);\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setMessage('Unable to connect to server. Please try again later.');\n      setMessageType(MESSAGE_TYPES.ERROR);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSignup = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    clearMessages();\n    const errors = validateForm(signupForm.formData, VIEW_TYPES.SIGNUP);\n    if (Object.keys(errors).length > 0) {\n      signupForm.setValidationErrors(errors);\n      setMessage('Please fix the errors below.');\n      setMessageType(MESSAGE_TYPES.ERROR);\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const data = await authAPI.register({\n        firstName: signupForm.formData.firstName,\n        lastName: signupForm.formData.lastName,\n        email: signupForm.formData.email,\n        password: signupForm.formData.password,\n        confirmPassword: signupForm.formData.confirmPassword\n      });\n      if (data.success) {\n        setMessage(`Account created successfully for ${data.user.fullName}! Please login.`);\n        setMessageType(MESSAGE_TYPES.SUCCESS);\n        setTimeout(() => {\n          switchView(VIEW_TYPES.LOGIN);\n          loginForm.resetForm({\n            email: signupForm.formData.email,\n            password: ''\n          });\n          clearMessages();\n        }, 2000);\n      } else {\n        if (data.errors) {\n          signupForm.setValidationErrors(data.errors);\n          setMessage('Please fix the errors below.');\n        } else {\n          setMessage(data.message || 'Registration failed. Please try again.');\n        }\n        setMessageType(MESSAGE_TYPES.ERROR);\n      }\n    } catch (error) {\n      console.error('Signup error:', error);\n      setMessage('Unable to connect to server. Please try again later.');\n      setMessageType(MESSAGE_TYPES.ERROR);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    clearMessages();\n    const errors = validateForm(resetForm.formData, VIEW_TYPES.RESET);\n    if (Object.keys(errors).length > 0) {\n      resetForm.setValidationErrors(errors);\n      setMessage('Please fix the errors below.');\n      setMessageType(MESSAGE_TYPES.ERROR);\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const data = await authAPI.resetPassword(resetForm.formData.email, resetForm.formData.newPassword, resetForm.formData.confirmPassword);\n      if (data.success) {\n        setMessage('Password reset successfully! You can now login with your new password.');\n        setMessageType(MESSAGE_TYPES.SUCCESS);\n        setTimeout(() => {\n          switchView(VIEW_TYPES.LOGIN);\n          loginForm.resetForm({\n            email: resetForm.formData.email,\n            password: ''\n          });\n          clearMessages();\n        }, 2000);\n      } else {\n        if (data.errors) {\n          resetForm.setValidationErrors(data.errors);\n          setMessage('Please fix the errors below.');\n        } else {\n          setMessage(data.message || 'Password reset failed. Please try again.');\n        }\n        setMessageType(MESSAGE_TYPES.ERROR);\n      }\n    } catch (error) {\n      console.error('Reset password error:', error);\n      setMessage('Unable to connect to server. Please try again later.');\n      setMessageType(MESSAGE_TYPES.ERROR);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleLogout = () => {\n    setUser(null);\n    clearMessages();\n    loginForm.resetForm();\n    signupForm.resetForm();\n    resetForm.resetForm();\n    setCurrentView(VIEW_TYPES.LOGIN);\n  };\n  const switchView = view => {\n    setCurrentView(view);\n    clearMessages();\n    loginForm.resetForm();\n    signupForm.resetForm();\n    resetForm.resetForm();\n  };\n  const getViewConfig = () => {\n    switch (currentView) {\n      case VIEW_TYPES.LOGIN:\n        return {\n          title: 'Welcome Back',\n          subtitle: 'Sign in to continue your journey 🚀',\n          icon: UserIcon,\n          maxWidth: '28rem'\n        };\n      case VIEW_TYPES.SIGNUP:\n        return {\n          title: 'Create Account',\n          subtitle: 'Join us and start your journey today ✨',\n          icon: UserIcon,\n          maxWidth: '32rem'\n        };\n      case VIEW_TYPES.RESET:\n        return {\n          title: 'Reset Password',\n          subtitle: 'Enter your email and new password 🔐',\n          icon: KeyIcon,\n          maxWidth: '28rem'\n        };\n      default:\n        return {\n          title: 'Welcome Back',\n          subtitle: 'Sign in to continue your journey 🚀',\n          icon: UserIcon,\n          maxWidth: '28rem'\n        };\n    }\n  };\n  const viewConfig = getViewConfig();\n\n  // Styles\n  const containerStyle = {\n    minHeight: '100vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    background: theme.background,\n    padding: '24px',\n    fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n    position: 'relative'\n  };\n  const cardStyle = {\n    width: '100%',\n    maxWidth: viewConfig.maxWidth,\n    backdropFilter: 'blur(12px)',\n    backgroundColor: theme.cardBg,\n    border: `1px solid ${theme.cardBorder}`,\n    boxShadow: isDarkMode ? '0 25px 50px -12px rgba(0, 0, 0, 0.5)' : '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\n    borderRadius: '16px',\n    overflow: 'hidden',\n    transform: isHovered ? 'scale(1.02)' : 'scale(1)',\n    transition: 'transform 0.3s ease'\n  };\n\n  // If user is logged in, show dashboard\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: [/*#__PURE__*/_jsxDEV(ThemeToggle, {\n        isDarkMode: isDarkMode,\n        toggleDarkMode: toggleDarkMode,\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: cardStyle,\n        onMouseEnter: () => setIsHovered(true),\n        onMouseLeave: () => setIsHovered(false),\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {\n          user: user,\n          onLogout: handleLogout,\n          theme: theme,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(ThemeToggle, {\n      isDarkMode: isDarkMode,\n      toggleDarkMode: toggleDarkMode,\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: cardStyle,\n      onMouseEnter: () => setIsHovered(true),\n      onMouseLeave: () => setIsHovered(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '32px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginBottom: '32px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '0 auto 16px',\n              width: '64px',\n              height: '64px',\n              backgroundColor: isDarkMode ? '#312e81' : '#e0e7ff',\n              borderRadius: '50%',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              color: isDarkMode ? '#a5b4fc' : '#4f46e5'\n            },\n            children: /*#__PURE__*/_jsxDEV(viewConfig.icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: '30px',\n              fontWeight: 'bold',\n              color: theme.textPrimary,\n              marginBottom: '8px'\n            },\n            children: viewConfig.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: theme.textSecondary,\n              marginBottom: '0'\n            },\n            children: viewConfig.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), currentView === VIEW_TYPES.LOGIN && /*#__PURE__*/_jsxDEV(LoginForm, {\n          formData: loginForm.formData,\n          validationErrors: loginForm.validationErrors,\n          onInputChange: loginForm.handleInputChange,\n          onSubmit: handleLogin,\n          isLoading: isLoading,\n          message: message,\n          messageType: messageType,\n          theme: theme,\n          onForgotPassword: () => switchView(VIEW_TYPES.RESET)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), currentView === VIEW_TYPES.SIGNUP && /*#__PURE__*/_jsxDEV(SignupForm, {\n          formData: signupForm.formData,\n          validationErrors: signupForm.validationErrors,\n          onInputChange: signupForm.handleInputChange,\n          onSubmit: handleSignup,\n          isLoading: isLoading,\n          message: message,\n          messageType: messageType,\n          theme: theme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this), currentView === VIEW_TYPES.RESET && /*#__PURE__*/_jsxDEV(ResetPasswordForm, {\n          formData: resetForm.formData,\n          validationErrors: resetForm.validationErrors,\n          onInputChange: resetForm.handleInputChange,\n          onSubmit: handleResetPassword,\n          isLoading: isLoading,\n          message: message,\n          messageType: messageType,\n          theme: theme,\n          onBackToLogin: () => switchView(VIEW_TYPES.LOGIN)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this), currentView === VIEW_TYPES.LOGIN && /*#__PURE__*/_jsxDEV(SocialLogin, {\n          theme: theme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), currentView !== VIEW_TYPES.RESET && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center',\n            fontSize: '14px',\n            color: theme.textSecondary,\n            marginTop: '24px',\n            marginBottom: '0'\n          },\n          children: [currentView === VIEW_TYPES.LOGIN ? \"Don't have an account? \" : \"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => switchView(currentView === VIEW_TYPES.LOGIN ? VIEW_TYPES.SIGNUP : VIEW_TYPES.LOGIN),\n            style: {\n              color: '#ec4899',\n              fontWeight: '600',\n              textDecoration: 'none',\n              background: 'none',\n              border: 'none',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontFamily: 'inherit'\n            },\n            children: currentView === VIEW_TYPES.LOGIN ? 'Sign up here' : 'Sign in here'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @keyframes spin {\n          from { transform: rotate(0deg); }\n          to { transform: rotate(360deg); }\n        }\n        \n        input:focus {\n          outline: none !important;\n          border-color: ${theme.inputFocus} !important;\n          box-shadow: 0 0 0 3px ${isDarkMode ? 'rgba(99, 102, 241, 0.2)' : 'rgba(79, 70, 229, 0.1)'} !important;\n        }\n        \n        input::placeholder {\n          color: ${theme.textSecondary};\n        }\n        \n        @media (max-width: 640px) {\n          [style*=\"grid-template-columns\"] {\n            grid-template-columns: 1fr !important;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NXeHDHY+GmEHVEyzrvpyTBrC11w=\", false, function () {\n  return [useTheme, useForm, useForm, useForm];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useTheme","useForm","authAPI","VIEW_TYPES","MESSAGE_TYPES","FORM_VALIDATION","ThemeToggle","SocialLogin","LoginForm","SignupForm","ResetPasswordForm","Dashboard","UserIcon","KeyIcon","jsxDEV","_jsxDEV","App","_s","isDarkMode","toggleDarkMode","theme","currentView","setCurrentView","LOGIN","isLoading","setIsLoading","message","setMessage","messageType","setMessageType","user","setUser","isHovered","setIsHovered","loginForm","email","password","signupForm","confirmPassword","firstName","lastName","resetForm","newPassword","clearMessages","validateForm","formData","formType","errors","SIGNUP","RESET","passwordField","length","MIN_PASSWORD_LENGTH","requiredFields","REQUIRED_FIELDS","toUpperCase","forEach","field","_formData$field","trim","handleLogin","e","preventDefault","Object","keys","setValidationErrors","ERROR","data","login","success","fullName","SUCCESS","error","console","handleSignup","register","setTimeout","switchView","handleResetPassword","resetPassword","handleLogout","view","getViewConfig","title","subtitle","icon","maxWidth","viewConfig","containerStyle","minHeight","display","alignItems","justifyContent","background","padding","fontFamily","position","cardStyle","width","backdropFilter","backgroundColor","cardBg","border","cardBorder","boxShadow","borderRadius","overflow","transform","transition","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onMouseEnter","onMouseLeave","onLogout","textAlign","marginBottom","margin","height","color","fontSize","fontWeight","textPrimary","textSecondary","validationErrors","onInputChange","handleInputChange","onSubmit","onForgotPassword","onBackToLogin","marginTop","type","onClick","textDecoration","cursor","inputFocus","_c","$RefreshReg$"],"sources":["C:/Users/Iamas/login-application/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useTheme } from './hooks/useTheme';\r\nimport { useForm } from './hooks/useForm';\r\nimport { authAPI } from './services/authAPI';\r\nimport { VIEW_TYPES, MESSAGE_TYPES, FORM_VALIDATION } from './utils/constants';\r\n\r\n// Components\r\nimport { ThemeToggle } from './components/common/ThemeToggle';\r\nimport { SocialLogin } from './components/common/SocialLogin';\r\nimport { LoginForm } from './components/forms/LoginForm';\r\nimport { SignupForm } from './components/forms/SignupForm';\r\nimport { ResetPasswordForm } from './components/forms/ResetPasswordForm';\r\nimport { Dashboard } from './components/layout/Dashboard';\r\nimport { UserIcon, KeyIcon } from './components/icons/Icons';\r\n\r\nfunction App() {\r\n  const { isDarkMode, toggleDarkMode, theme } = useTheme();\r\n  const [currentView, setCurrentView] = useState(VIEW_TYPES.LOGIN);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const loginForm = useForm({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const signupForm = useForm({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  });\r\n\r\n  const resetForm = useForm({\r\n    email: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const clearMessages = () => {\r\n    setMessage('');\r\n    setMessageType('');\r\n  };\r\n\r\n  const validateForm = (formData, formType) => {\r\n    const errors = {};\r\n    \r\n    // Password matching validation\r\n    if ((formType === VIEW_TYPES.SIGNUP || formType === VIEW_TYPES.RESET) && \r\n        formData.password !== formData.confirmPassword) {\r\n      errors.confirmPassword = 'Passwords do not match';\r\n    }\r\n    \r\n    // Password length validation\r\n    const passwordField = formType === VIEW_TYPES.RESET ? 'newPassword' : 'password';\r\n    if (formData[passwordField] && formData[passwordField].length < FORM_VALIDATION.MIN_PASSWORD_LENGTH) {\r\n      errors[passwordField] = `Password must be at least ${FORM_VALIDATION.MIN_PASSWORD_LENGTH} characters long`;\r\n    }\r\n    \r\n    // Required fields validation\r\n    const requiredFields = FORM_VALIDATION.REQUIRED_FIELDS[formType.toUpperCase()];\r\n    requiredFields?.forEach(field => {\r\n      if (!formData[field]?.trim()) {\r\n        errors[field] = 'This field is required';\r\n      }\r\n    });\r\n    \r\n    return errors;\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    clearMessages();\r\n\r\n    const errors = validateForm(loginForm.formData, VIEW_TYPES.LOGIN);\r\n    if (Object.keys(errors).length > 0) {\r\n      loginForm.setValidationErrors(errors);\r\n      setMessage('Please fix the errors below.');\r\n      setMessageType(MESSAGE_TYPES.ERROR);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await authAPI.login(loginForm.formData.email, loginForm.formData.password);\r\n      \r\n      if (data.success) {\r\n        setMessage(`Welcome back, ${data.user.fullName}!`);\r\n        setMessageType(MESSAGE_TYPES.SUCCESS);\r\n        setUser(data.user);\r\n        loginForm.resetForm();\r\n      } else {\r\n        setMessage(data.message || 'Login failed. Please check your credentials.');\r\n        setMessageType(MESSAGE_TYPES.ERROR);\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setMessage('Unable to connect to server. Please try again later.');\r\n      setMessageType(MESSAGE_TYPES.ERROR);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSignup = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    clearMessages();\r\n\r\n    const errors = validateForm(signupForm.formData, VIEW_TYPES.SIGNUP);\r\n    if (Object.keys(errors).length > 0) {\r\n      signupForm.setValidationErrors(errors);\r\n      setMessage('Please fix the errors below.');\r\n      setMessageType(MESSAGE_TYPES.ERROR);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await authAPI.register({\r\n        firstName: signupForm.formData.firstName,\r\n        lastName: signupForm.formData.lastName,\r\n        email: signupForm.formData.email,\r\n        password: signupForm.formData.password,\r\n        confirmPassword: signupForm.formData.confirmPassword\r\n      });\r\n\r\n      if (data.success) {\r\n        setMessage(`Account created successfully for ${data.user.fullName}! Please login.`);\r\n        setMessageType(MESSAGE_TYPES.SUCCESS);\r\n        setTimeout(() => {\r\n          switchView(VIEW_TYPES.LOGIN);\r\n          loginForm.resetForm({ \r\n            email: signupForm.formData.email, \r\n            password: ''\r\n          });\r\n          clearMessages();\r\n        }, 2000);\r\n      } else {\r\n        if (data.errors) {\r\n          signupForm.setValidationErrors(data.errors);\r\n          setMessage('Please fix the errors below.');\r\n        } else {\r\n          setMessage(data.message || 'Registration failed. Please try again.');\r\n        }\r\n        setMessageType(MESSAGE_TYPES.ERROR);\r\n      }\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      setMessage('Unable to connect to server. Please try again later.');\r\n      setMessageType(MESSAGE_TYPES.ERROR);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    clearMessages();\r\n\r\n    const errors = validateForm(resetForm.formData, VIEW_TYPES.RESET);\r\n    if (Object.keys(errors).length > 0) {\r\n      resetForm.setValidationErrors(errors);\r\n      setMessage('Please fix the errors below.');\r\n      setMessageType(MESSAGE_TYPES.ERROR);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = await authAPI.resetPassword(\r\n        resetForm.formData.email,\r\n        resetForm.formData.newPassword,\r\n        resetForm.formData.confirmPassword\r\n      );\r\n\r\n      if (data.success) {\r\n        setMessage('Password reset successfully! You can now login with your new password.');\r\n        setMessageType(MESSAGE_TYPES.SUCCESS);\r\n        setTimeout(() => {\r\n          switchView(VIEW_TYPES.LOGIN);\r\n          loginForm.resetForm({ \r\n            email: resetForm.formData.email, \r\n            password: ''\r\n          });\r\n          clearMessages();\r\n        }, 2000);\r\n      } else {\r\n        if (data.errors) {\r\n          resetForm.setValidationErrors(data.errors);\r\n          setMessage('Please fix the errors below.');\r\n        } else {\r\n          setMessage(data.message || 'Password reset failed. Please try again.');\r\n        }\r\n        setMessageType(MESSAGE_TYPES.ERROR);\r\n      }\r\n    } catch (error) {\r\n      console.error('Reset password error:', error);\r\n      setMessage('Unable to connect to server. Please try again later.');\r\n      setMessageType(MESSAGE_TYPES.ERROR);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setUser(null);\r\n    clearMessages();\r\n    loginForm.resetForm();\r\n    signupForm.resetForm();\r\n    resetForm.resetForm();\r\n    setCurrentView(VIEW_TYPES.LOGIN);\r\n  };\r\n\r\n  const switchView = (view) => {\r\n    setCurrentView(view);\r\n    clearMessages();\r\n    loginForm.resetForm();\r\n    signupForm.resetForm();\r\n    resetForm.resetForm();\r\n  };\r\n\r\n  const getViewConfig = () => {\r\n    switch(currentView) {\r\n      case VIEW_TYPES.LOGIN:\r\n        return {\r\n          title: 'Welcome Back',\r\n          subtitle: 'Sign in to continue your journey 🚀',\r\n          icon: UserIcon,\r\n          maxWidth: '28rem'\r\n        };\r\n      case VIEW_TYPES.SIGNUP:\r\n        return {\r\n          title: 'Create Account',\r\n          subtitle: 'Join us and start your journey today ✨',\r\n          icon: UserIcon,\r\n          maxWidth: '32rem'\r\n        };\r\n      case VIEW_TYPES.RESET:\r\n        return {\r\n          title: 'Reset Password',\r\n          subtitle: 'Enter your email and new password 🔐',\r\n          icon: KeyIcon,\r\n          maxWidth: '28rem'\r\n        };\r\n      default:\r\n        return {\r\n          title: 'Welcome Back',\r\n          subtitle: 'Sign in to continue your journey 🚀',\r\n          icon: UserIcon,\r\n          maxWidth: '28rem'\r\n        };\r\n    }\r\n  };\r\n\r\n  const viewConfig = getViewConfig();\r\n\r\n  // Styles\r\n  const containerStyle = {\r\n    minHeight: '100vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    background: theme.background,\r\n    padding: '24px',\r\n    fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\r\n    position: 'relative'\r\n  };\r\n\r\n  const cardStyle = {\r\n    width: '100%',\r\n    maxWidth: viewConfig.maxWidth,\r\n    backdropFilter: 'blur(12px)',\r\n    backgroundColor: theme.cardBg,\r\n    border: `1px solid ${theme.cardBorder}`,\r\n    boxShadow: isDarkMode \r\n      ? '0 25px 50px -12px rgba(0, 0, 0, 0.5)' \r\n      : '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\r\n    borderRadius: '16px',\r\n    overflow: 'hidden',\r\n    transform: isHovered ? 'scale(1.02)' : 'scale(1)',\r\n    transition: 'transform 0.3s ease'\r\n  };\r\n\r\n  // If user is logged in, show dashboard\r\n  if (user) {\r\n    return (\r\n      <div style={containerStyle}>\r\n        <ThemeToggle isDarkMode={isDarkMode} toggleDarkMode={toggleDarkMode} theme={theme} />\r\n        <div \r\n          style={cardStyle}\r\n          onMouseEnter={() => setIsHovered(true)}\r\n          onMouseLeave={() => setIsHovered(false)}\r\n        >\r\n          <Dashboard \r\n            user={user} \r\n            onLogout={handleLogout} \r\n            theme={theme} \r\n            isDarkMode={isDarkMode} \r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <ThemeToggle isDarkMode={isDarkMode} toggleDarkMode={toggleDarkMode} theme={theme} />\r\n      \r\n      <div \r\n        style={cardStyle}\r\n        onMouseEnter={() => setIsHovered(true)}\r\n        onMouseLeave={() => setIsHovered(false)}\r\n      >\r\n        <div style={{ padding: '32px' }}>\r\n          {/* Header */}\r\n          <div style={{ textAlign: 'center', marginBottom: '32px' }}>\r\n            <div style={{\r\n              margin: '0 auto 16px',\r\n              width: '64px',\r\n              height: '64px',\r\n              backgroundColor: isDarkMode ? '#312e81' : '#e0e7ff',\r\n              borderRadius: '50%',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              color: isDarkMode ? '#a5b4fc' : '#4f46e5'\r\n            }}>\r\n              <viewConfig.icon />\r\n            </div>\r\n            <h2 style={{\r\n              fontSize: '30px',\r\n              fontWeight: 'bold',\r\n              color: theme.textPrimary,\r\n              marginBottom: '8px'\r\n            }}>\r\n              {viewConfig.title}\r\n            </h2>\r\n            <p style={{ color: theme.textSecondary, marginBottom: '0' }}>\r\n              {viewConfig.subtitle}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Forms */}\r\n          {currentView === VIEW_TYPES.LOGIN && (\r\n            <LoginForm\r\n              formData={loginForm.formData}\r\n              validationErrors={loginForm.validationErrors}\r\n              onInputChange={loginForm.handleInputChange}\r\n              onSubmit={handleLogin}\r\n              isLoading={isLoading}\r\n              message={message}\r\n              messageType={messageType}\r\n              theme={theme}\r\n              onForgotPassword={() => switchView(VIEW_TYPES.RESET)}\r\n            />\r\n          )}\r\n\r\n          {currentView === VIEW_TYPES.SIGNUP && (\r\n            <SignupForm\r\n              formData={signupForm.formData}\r\n              validationErrors={signupForm.validationErrors}\r\n              onInputChange={signupForm.handleInputChange}\r\n              onSubmit={handleSignup}\r\n              isLoading={isLoading}\r\n              message={message}\r\n              messageType={messageType}\r\n              theme={theme}\r\n            />\r\n          )}\r\n\r\n          {currentView === VIEW_TYPES.RESET && (\r\n            <ResetPasswordForm\r\n              formData={resetForm.formData}\r\n              validationErrors={resetForm.validationErrors}\r\n              onInputChange={resetForm.handleInputChange}\r\n              onSubmit={handleResetPassword}\r\n              isLoading={isLoading}\r\n              message={message}\r\n              messageType={messageType}\r\n              theme={theme}\r\n              onBackToLogin={() => switchView(VIEW_TYPES.LOGIN)}\r\n            />\r\n          )}\r\n\r\n          {/* Social Login (Login only) */}\r\n          {currentView === VIEW_TYPES.LOGIN && (\r\n            <SocialLogin theme={theme} />\r\n          )}\r\n\r\n          {/* Switch View Link */}\r\n          {currentView !== VIEW_TYPES.RESET && (\r\n            <p style={{\r\n              textAlign: 'center',\r\n              fontSize: '14px',\r\n              color: theme.textSecondary,\r\n              marginTop: '24px',\r\n              marginBottom: '0'\r\n            }}>\r\n              {currentView === VIEW_TYPES.LOGIN ? \"Don't have an account? \" : \"Already have an account? \"}\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => switchView(currentView === VIEW_TYPES.LOGIN ? VIEW_TYPES.SIGNUP : VIEW_TYPES.LOGIN)}\r\n                style={{\r\n                  color: '#ec4899',\r\n                  fontWeight: '600',\r\n                  textDecoration: 'none',\r\n                  background: 'none',\r\n                  border: 'none',\r\n                  cursor: 'pointer',\r\n                  fontSize: '14px',\r\n                  fontFamily: 'inherit'\r\n                }}\r\n              >\r\n                {currentView === VIEW_TYPES.LOGIN ? 'Sign up here' : 'Sign in here'}\r\n              </button>\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <style>{`\r\n        @keyframes spin {\r\n          from { transform: rotate(0deg); }\r\n          to { transform: rotate(360deg); }\r\n        }\r\n        \r\n        input:focus {\r\n          outline: none !important;\r\n          border-color: ${theme.inputFocus} !important;\r\n          box-shadow: 0 0 0 3px ${isDarkMode ? 'rgba(99, 102, 241, 0.2)' : 'rgba(79, 70, 229, 0.1)'} !important;\r\n        }\r\n        \r\n        input::placeholder {\r\n          color: ${theme.textSecondary};\r\n        }\r\n        \r\n        @media (max-width: 640px) {\r\n          [style*=\"grid-template-columns\"] {\r\n            grid-template-columns: 1fr !important;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}